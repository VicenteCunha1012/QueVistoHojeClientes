@page "/"

@using QueVistoHoje.RCL.Data.Entities
@inject HttpClient Http

<div class="title-container">
    <div class="carousel-title">
        <h2>Sugestões</h2>
    </div>
</div>

@if (produtos == null) {
    <p>A carregar sugestões</p>
} else {
    <div class="carousel-container">
        <button class="carousel-button prev" @onclick="ShowPreviousImage" disabled="@IsSingleImage">❮</button>

        <div class="carousel" style="transform: translateX(@(-currentIndex * 100)%)">
            @foreach (var produto in produtos)
            {
                <div class="carousel-item">
                    <img src="@produto.Imagem" class="carousel-image" />
                    <div class="carousel-info" onclick="window.location.href='product/@produto.Id'">
                        <div class="product-value">@produto.Preco €</div>
                        <div class="product-name">@produto.Nome</div>
                    </div>
                </div>
            }
        </div>

        <button class="carousel-button next" @onclick="ShowNextImage" disabled="@IsSingleImage">❯</button>
    </div>
}

@code {
    private List<Produto> produtos = new List<Produto>();
    private int currentIndex = 0;
    private bool IsSingleImage => produtos.Count <= 1;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            produtos = await Http.GetFromJsonAsync<List<Produto>>("https://d3q8hwmm-7119.uks1.devtunnels.ms/api/produtos/");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching produtos: {ex.Message}");
        }
    }

    private void ShowNextImage()
    {
        if (currentIndex < produtos.Count - 1)
        {
            currentIndex++;
        }
        else
        {
            currentIndex = 0;
        }
    }

    private void ShowPreviousImage()
    {
        if (currentIndex > 0)
        {
            currentIndex--;
        }
        else
        {
            currentIndex = produtos.Count - 1;
        }
    }
}
